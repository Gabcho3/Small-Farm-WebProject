// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmallFarm.Data;

#nullable disable

namespace SmallFarm.Data.Migrations
{
    [DbContext(typeof(SmallFarmDbContext))]
    [Migration("20240304122446_SeedCities")]
    partial class SeedCities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Cart", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ablanitsa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Aheloy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Aksakovo"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aldomirovtsi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aleksandrovo"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Asenovgrad"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Aydemir"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Aytos"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Balgarovo"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Banitsa"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bankya"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Banya"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Basarbovo"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Bata"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Batanovtsi"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Belogradets"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Beloslav"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Benkovski"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Bistritsa"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Bistritsa"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Blagoevgrad"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Boboshevo"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Borovo"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Borovo"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Botevgrad"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bozhurishte"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bregovo"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Brestovitsa"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Buhovo"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Bukovlak"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Burgas"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Busmantsi"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Byal Izvor"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Byala"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Chepintsi"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Chernogorovo"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Cherven Breg"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Chervena Voda"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Debelets"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Devin"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Devnya"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Dimitrovgrad"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Divotino"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Dobri Dyal"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Dobrich"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Dobromir"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Dobroslavtsi"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Dolen"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Dolna Banya"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Dolna Oryahovitsa"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Dolni Bogrov"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Draganovo"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Dragichevo"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Dupnitsa"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Dzherman"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Dzhulyunitsa"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Elin Pelin"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Etropole"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Ezerovo"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Gabrovnitsa"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Gabrovo"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Galabets"
                        },
                        new
                        {
                            Id = 63,
                            Name = "German"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Glavinitsa"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Glozhene"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Gluhar"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Gorna Oryahovitsa"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Gorni Bogrov"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Gorski Izvor"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Gotse Delchev"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Gradina"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Graf Ignatievo"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Grivitsa"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Gulyantsi"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Gurkovo"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Gyulyovtsa"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Hadzhievo"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Haskovo"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Ignatievo"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Isperih"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Ivaylo"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Izvorsko"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Kableshkovo"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Kadievo"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Kalekovets"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Kalipetrovo"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Kalofer"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Kamenar"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Karabunar"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Karageorgievo"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Karapelit"
                        },
                        new
                        {
                            Id = 92,
                            Name = "Kardzhali"
                        },
                        new
                        {
                            Id = 93,
                            Name = "Karlovo"
                        },
                        new
                        {
                            Id = 94,
                            Name = "Kazanlak"
                        },
                        new
                        {
                            Id = 95,
                            Name = "Kazichene"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Kermen"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Kilifarevo"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Kladnitsa"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Kokalyane"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Konstantinovo"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Kosharitsa"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Kostandovo"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Kostievo"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Kostinbrod"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Koynare"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Kozloduy"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Kran"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Krastava"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Kraynitsi"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Krepost"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Krichim"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Krivina"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Krushare"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Kukorevo"
                        },
                        new
                        {
                            Id = 115,
                            Name = "Kurtovo Konare"
                        },
                        new
                        {
                            Id = 116,
                            Name = "Kyustendil"
                        },
                        new
                        {
                            Id = 117,
                            Name = "Lesnovo"
                        },
                        new
                        {
                            Id = 118,
                            Name = "Lom"
                        },
                        new
                        {
                            Id = 119,
                            Name = "Lovech"
                        },
                        new
                        {
                            Id = 120,
                            Name = "Lozen"
                        },
                        new
                        {
                            Id = 121,
                            Name = "Lyaskovets"
                        },
                        new
                        {
                            Id = 122,
                            Name = "Lyuben Karavelovo"
                        },
                        new
                        {
                            Id = 123,
                            Name = "Madan"
                        },
                        new
                        {
                            Id = 124,
                            Name = "Maglen"
                        },
                        new
                        {
                            Id = 125,
                            Name = "Malevo"
                        },
                        new
                        {
                            Id = 126,
                            Name = "Malo Konare"
                        },
                        new
                        {
                            Id = 127,
                            Name = "Marchaevo"
                        },
                        new
                        {
                            Id = 128,
                            Name = "Marinka"
                        },
                        new
                        {
                            Id = 129,
                            Name = "Marten"
                        },
                        new
                        {
                            Id = 130,
                            Name = "Merichleri"
                        },
                        new
                        {
                            Id = 131,
                            Name = "Mirovyane"
                        },
                        new
                        {
                            Id = 132,
                            Name = "Mokrishte"
                        },
                        new
                        {
                            Id = 133,
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 134,
                            Name = "Mortagonovo"
                        },
                        new
                        {
                            Id = 135,
                            Name = "Negovan"
                        },
                        new
                        {
                            Id = 136,
                            Name = "Nikolaevo"
                        },
                        new
                        {
                            Id = 137,
                            Name = "Nikolovo"
                        },
                        new
                        {
                            Id = 138,
                            Name = "Novi Pazar"
                        },
                        new
                        {
                            Id = 139,
                            Name = "Novo Selo"
                        },
                        new
                        {
                            Id = 140,
                            Name = "Obzor"
                        },
                        new
                        {
                            Id = 141,
                            Name = "Ognyanovo"
                        },
                        new
                        {
                            Id = 142,
                            Name = "Omurtag"
                        },
                        new
                        {
                            Id = 143,
                            Name = "Opalchensko"
                        },
                        new
                        {
                            Id = 144,
                            Name = "Orizare"
                        },
                        new
                        {
                            Id = 145,
                            Name = "Ostrovo"
                        },
                        new
                        {
                            Id = 146,
                            Name = "Panagyurishte"
                        },
                        new
                        {
                            Id = 147,
                            Name = "Pancharevo"
                        },
                        new
                        {
                            Id = 148,
                            Name = "Parvenets"
                        },
                        new
                        {
                            Id = 149,
                            Name = "Parvomaytsi"
                        },
                        new
                        {
                            Id = 150,
                            Name = "Patalenitsa"
                        },
                        new
                        {
                            Id = 151,
                            Name = "Pazardzhik"
                        },
                        new
                        {
                            Id = 152,
                            Name = "Pernik"
                        },
                        new
                        {
                            Id = 153,
                            Name = "Perushtitsa"
                        },
                        new
                        {
                            Id = 154,
                            Name = "Peshtera"
                        },
                        new
                        {
                            Id = 155,
                            Name = "Petarch"
                        },
                        new
                        {
                            Id = 156,
                            Name = "Petrich"
                        },
                        new
                        {
                            Id = 157,
                            Name = "Pisarevo"
                        },
                        new
                        {
                            Id = 158,
                            Name = "Planinitsa"
                        },
                        new
                        {
                            Id = 159,
                            Name = "Pleven"
                        },
                        new
                        {
                            Id = 160,
                            Name = "Plovdiv"
                        },
                        new
                        {
                            Id = 161,
                            Name = "Polikrayshte"
                        },
                        new
                        {
                            Id = 162,
                            Name = "Pomorie"
                        },
                        new
                        {
                            Id = 163,
                            Name = "Prosenik"
                        },
                        new
                        {
                            Id = 164,
                            Name = "Provadia"
                        },
                        new
                        {
                            Id = 165,
                            Name = "Rakitovo"
                        },
                        new
                        {
                            Id = 166,
                            Name = "Rakovski"
                        },
                        new
                        {
                            Id = 167,
                            Name = "Rakovski"
                        },
                        new
                        {
                            Id = 168,
                            Name = "Ravda"
                        },
                        new
                        {
                            Id = 169,
                            Name = "Ravnets"
                        },
                        new
                        {
                            Id = 170,
                            Name = "Razgrad"
                        },
                        new
                        {
                            Id = 171,
                            Name = "Razhitsa"
                        },
                        new
                        {
                            Id = 172,
                            Name = "Razlog"
                        },
                        new
                        {
                            Id = 173,
                            Name = "Resen"
                        },
                        new
                        {
                            Id = 174,
                            Name = "Rogosh"
                        },
                        new
                        {
                            Id = 175,
                            Name = "Rudartsi"
                        },
                        new
                        {
                            Id = 176,
                            Name = "Rudozem"
                        },
                        new
                        {
                            Id = 177,
                            Name = "Ruen"
                        },
                        new
                        {
                            Id = 178,
                            Name = "Ruse"
                        },
                        new
                        {
                            Id = 179,
                            Name = "Sadovo"
                        },
                        new
                        {
                            Id = 180,
                            Name = "Saedinenie"
                        },
                        new
                        {
                            Id = 181,
                            Name = "Samoranovo"
                        },
                        new
                        {
                            Id = 182,
                            Name = "Sandrovo"
                        },
                        new
                        {
                            Id = 183,
                            Name = "Sapareva Banya"
                        },
                        new
                        {
                            Id = 184,
                            Name = "Saraya"
                        },
                        new
                        {
                            Id = 185,
                            Name = "Sarnitsa"
                        },
                        new
                        {
                            Id = 186,
                            Name = "Seliminovo"
                        },
                        new
                        {
                            Id = 187,
                            Name = "Semerdzhievo"
                        },
                        new
                        {
                            Id = 188,
                            Name = "Septemvri"
                        },
                        new
                        {
                            Id = 189,
                            Name = "Shipka"
                        },
                        new
                        {
                            Id = 190,
                            Name = "Shumen"
                        },
                        new
                        {
                            Id = 191,
                            Name = "Silistra"
                        },
                        new
                        {
                            Id = 192,
                            Name = "Sinitovo"
                        },
                        new
                        {
                            Id = 193,
                            Name = "Skutare"
                        },
                        new
                        {
                            Id = 194,
                            Name = "Slavyanovo"
                        },
                        new
                        {
                            Id = 195,
                            Name = "Sliven"
                        },
                        new
                        {
                            Id = 196,
                            Name = "Slivnitsa"
                        },
                        new
                        {
                            Id = 197,
                            Name = "Slokoshtitsa"
                        },
                        new
                        {
                            Id = 198,
                            Name = "Smolyan"
                        },
                        new
                        {
                            Id = 199,
                            Name = "Snyagovo"
                        },
                        new
                        {
                            Id = 200,
                            Name = "Sofia"
                        },
                        new
                        {
                            Id = 201,
                            Name = "Sopot"
                        },
                        new
                        {
                            Id = 202,
                            Name = "Sotirya"
                        },
                        new
                        {
                            Id = 203,
                            Name = "Stamboliyski"
                        },
                        new
                        {
                            Id = 204,
                            Name = "Stara Zagora"
                        },
                        new
                        {
                            Id = 205,
                            Name = "Startsevo"
                        },
                        new
                        {
                            Id = 206,
                            Name = "Stefanovo"
                        },
                        new
                        {
                            Id = 207,
                            Name = "Stozher"
                        },
                        new
                        {
                            Id = 208,
                            Name = "Stratsin"
                        },
                        new
                        {
                            Id = 209,
                            Name = "Studena"
                        },
                        new
                        {
                            Id = 210,
                            Name = "Suvorovo"
                        },
                        new
                        {
                            Id = 211,
                            Name = "Sveti Vlas"
                        },
                        new
                        {
                            Id = 212,
                            Name = "Svetovrachane"
                        },
                        new
                        {
                            Id = 213,
                            Name = "Svishtov"
                        },
                        new
                        {
                            Id = 214,
                            Name = "Tankovo"
                        },
                        new
                        {
                            Id = 215,
                            Name = "Targovishte"
                        },
                        new
                        {
                            Id = 216,
                            Name = "Topolchane"
                        },
                        new
                        {
                            Id = 217,
                            Name = "Topoli"
                        },
                        new
                        {
                            Id = 218,
                            Name = "Tranak"
                        },
                        new
                        {
                            Id = 219,
                            Name = "Trivoditsi"
                        },
                        new
                        {
                            Id = 220,
                            Name = "Trud"
                        },
                        new
                        {
                            Id = 221,
                            Name = "Tsaratsovo"
                        },
                        new
                        {
                            Id = 222,
                            Name = "Tsarev Brod"
                        },
                        new
                        {
                            Id = 223,
                            Name = "Uzundzhovo"
                        },
                        new
                        {
                            Id = 224,
                            Name = "Vaglen"
                        },
                        new
                        {
                            Id = 225,
                            Name = "Vaklinovo"
                        },
                        new
                        {
                            Id = 226,
                            Name = "Valkosel"
                        },
                        new
                        {
                            Id = 227,
                            Name = "Varbitsa"
                        },
                        new
                        {
                            Id = 228,
                            Name = "Varbitsa"
                        },
                        new
                        {
                            Id = 229,
                            Name = "Vardun"
                        },
                        new
                        {
                            Id = 230,
                            Name = "Varna"
                        },
                        new
                        {
                            Id = 231,
                            Name = "Varshets"
                        },
                        new
                        {
                            Id = 232,
                            Name = "Veliki Preslav"
                        },
                        new
                        {
                            Id = 233,
                            Name = "Veliko Tarnovo"
                        },
                        new
                        {
                            Id = 234,
                            Name = "Velingrad"
                        },
                        new
                        {
                            Id = 235,
                            Name = "Veselinovo"
                        },
                        new
                        {
                            Id = 236,
                            Name = "Vetovo"
                        },
                        new
                        {
                            Id = 237,
                            Name = "Vetren"
                        },
                        new
                        {
                            Id = 238,
                            Name = "Vidin"
                        },
                        new
                        {
                            Id = 239,
                            Name = "Vinitsa"
                        },
                        new
                        {
                            Id = 240,
                            Name = "Vinogradets"
                        },
                        new
                        {
                            Id = 241,
                            Name = "Vladaya"
                        },
                        new
                        {
                            Id = 242,
                            Name = "Voluyak"
                        },
                        new
                        {
                            Id = 243,
                            Name = "Voysil"
                        },
                        new
                        {
                            Id = 244,
                            Name = "Voyvodinovo"
                        },
                        new
                        {
                            Id = 245,
                            Name = "Voyvodovo"
                        },
                        new
                        {
                            Id = 246,
                            Name = "Vratsa"
                        },
                        new
                        {
                            Id = 247,
                            Name = "Vresovo"
                        },
                        new
                        {
                            Id = 248,
                            Name = "Yabalchevo"
                        },
                        new
                        {
                            Id = 249,
                            Name = "Yabalkovo"
                        },
                        new
                        {
                            Id = 250,
                            Name = "Yahinovo"
                        },
                        new
                        {
                            Id = 251,
                            Name = "Yambol"
                        },
                        new
                        {
                            Id = 252,
                            Name = "Zaychar"
                        },
                        new
                        {
                            Id = 253,
                            Name = "Zheleznitsa"
                        },
                        new
                        {
                            Id = 254,
                            Name = "Zlatograd"
                        },
                        new
                        {
                            Id = 255,
                            Name = "Zvezditsa"
                        });
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.FavouriteProduct", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClientId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("FavoriteProducts");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Cart", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallFarm.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.FavouriteProduct", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallFarm.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Manufacturer", b =>
                {
                    b.HasOne("SmallFarm.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Order", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.OrderProduct", b =>
                {
                    b.HasOne("SmallFarm.Data.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallFarm.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Product", b =>
                {
                    b.HasOne("SmallFarm.Data.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("SmallFarm.Data.Entities.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
