@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@using SmallFarm.Core.Models.Product
@model ProductFormModel

@{
    ViewData["Title"] = "Add Product";
}

<form asp-controller="Product" asp-action="Add" class="row g-3" method="post">

    <div class="mx-auto col-12">
        <label class="form-label" for="inputName">Product Name</label>
        <input type="text" class="form-control " id="inputName" placeholder="Tomatoes" asp-for="Name">
        <span asp-validation-for="Name" class="small text-danger"></span>
    </div>

    <div class="col-12">
        <label class="form-label" for="inputDescription">Description</label>
        <textarea class="form-control" placeholder="Leave a description here" id="inputDescription" style="height:100px" asp-for="Description"></textarea>
        <span asp-validation-for="Description" class="small text-danger"></span>
    </div>

    <div class="col-4">
        <label class="form-label" for="quantityInput">Available Quantity</label>

        <div class="input-group">
            <input type="text" id="quantityInput" class="form-control" value="0.01" asp-for="Quantity" />
            <span id="quantitySpan" class="input-group-text bg-success">kg</span>
        </div>

        <span asp-validation-for="Quantity" class="small text-danger"></span>
    </div>


    <div class="col-4">
        <label id="priceLabel" class="form-label" for="priceInput">Price Per Kilogram</label>

        <div class="input-group">
            <input type="text" id="priceInput" class="form-control" value="0.01" asp-for="PricePerKg" />
            <span class="input-group-text bg-warning">€</span>
        </div>

        <span asp-validation-for="PricePerKg" class="small text-danger"></span>
    </div>

    <div class="col-4">
        <label asp-for="CategoryId" class="form-label">Category</label>
        <select id="categoryInput" asp-for="@Model.CategoryId" class="form-control" aria-required="true">
            @foreach (var category in Model.ProductCategories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </select>
    </div>

    <div class="col-12">
        <label class="form-label" for="imageInput">Image URL</label>
        <input class="form-control" type="text" id="imageInput" asp-for="ImageUrl">
    </div>

    <div class="">
        <button type="submit" class="btn btn-success w-100">Add Product</button>
    </div>
</form>

<script>
    var quantityInput = document.getElementById("quantityInput");
    var priceInput = document.getElementById("priceInput");
    var categoryInput = document.getElementById("categoryInput");

    function replaceSeperator() {
        quantityInput.value = quantityInput.value.replace(",", ".");
        priceInput.value = priceInput.value.replace(",", ".");
    }

    function checkForNegativeNumber() {
        var quantity = parseFloat(quantityInput.value);
        var price = parseFloat(priceInput.value);


        if (quantity < 0) {
            quantityInput.value = 0.01;
        }

        if (price < 0) {
            priceInput.value = 0.01;
        }
    }

    function changeIfDrink() {
        var value = categoryInput.value;

        if (value == 3) {
            document.getElementById("priceLabel").innerText = "Price per liter";
            document.getElementById("quantitySpan").innerText = "Liters"
        }
        else {
            document.getElementById("priceLabel").innerHTML = "Price per kilogram";
            document.getElementById("quantitySpan").innerText = "kg"
        }
    }

    quantityInput.addEventListener("input", replaceSeperator);
    priceInput.addEventListener("input", replaceSeperator);

    quantityInput.addEventListener("input", checkForNegativeNumber);
    priceInput.addEventListener("input", checkForNegativeNumber);

    categoryInput.addEventListener("input", changeIfDrink);

    replaceSeperator();
    checkForNegativeNumber();
    changeIfDrink();
    

</script>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

